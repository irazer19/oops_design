Requirements:

Functional requirements
- Identify the current location: Users should be able to approximate their current location (latitude and longitude in
decimal values) on the world map.
- Recommend the fastest route: Given the source and destination (place names in text), the system should recommend the
optimal route by distance and time, depending on the type of transportation.
- Give directions: Once the user has chosen the route, the system should list directions in text format, where each item
in the list guides the user to turn or continue in a specific direction to reach the destination.

Non-functional requirements:
- Availability: The system should be highly available.
- Scalability: It should be scalable because both individuals and other enterprise applications like Uber and Lyft use
Google Maps to find appropriate routes.
- Less response time: It shouldn’t take more than two or three seconds to calculate the ETA and the route, given the
source and the destination points.
- Accuracy: The ETA we predict should not deviate too much from the actual travel time.


# API:
currLocation(location): The currLocation function displays the user’s location on the map.
findRoute(source, destination, transport_type): The findRoute function helps find the optimal route between two points.
directions(curr_location, steps): The directions function helps us get alerts in the form of texts or sounds that
indicate when and where to turn next.


